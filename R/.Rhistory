source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
#library(libcurl)
#url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=*&outSR=4326&f=json"
#data <- htmltab(doc=url, which=2)
#head(data, 7)
install.packages("htmltab")
#library(libcurl)
#url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=*&outSR=4326&f=json"
#data <- htmltab(doc=url, which=2)
#head(data, 7)
install.packages("htmltab")
#library(libcurl)
#url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=*&outSR=4326&f=json"
#data <- htmltab(doc=url, which=2)
#head(data, 7)
install.packages("htmltab")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
source("~/Documents/testr.R")
library(jsonlite)
url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=*&outSR=4326&f=json"
data <- jsonlite::fromJSON(url)
names(data$fields)
head(data$fields)
source("~/Documents/testr.R")
source("~/Documents/testr.R")
)
source("~/Documents/testr.R", echo=TRUE)
library(jsonlite)
url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=*&outSR=4326&f=json"
data <- jsonlite::fromJSON(url)
names(data$features)
head(data$features)
library(jsonlite)
url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=Country_Region,Deaths,Incident_Rate,Mortality_Rate,Confirmed&outSR=4326&f=json"
data <- jsonlite::fromJSON(url)
names(data$features)
head(data$features)
library(jsonlite)
url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=Country_Region,Deaths,Incident_Rate,Mortality_Rate,Confirmed&outSR=4326&f=json"
data <- jsonlite::fromJSON(url)
names(data$features)
head(data$features)
head(data$features)
head(data$features)
head(data$features)
head(data$features)
head(data$features)
head(data$features)
head(data$features)
head(data$features)
head(data$features)
head(data$features)
library(jsonlite)
url <- "http://api.fantasy.nfl.com/v1/players/stats?statType=seasonStats&season=2010&week=1&format=json"
data <- jsonlite::fromJSON(url)
names(data$features)
head(data$features)
library(jsonlite)
url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=Country_Region,Deaths,Incident_Rate,Mortality_Rate,Confirmed&outSR=4326&f=json"
data <- jsonlite::fromJSON(url)
names(data$features)
head(data$features)
library(jsonlite)
url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=Country_Region,Deaths,Incident_Rate,Mortality_Rate,Confirmed&outSR=4326&f=json"
data <- jsonlite::fromJSON(url)
names(data$features)
data$features
library(jsonlite)
url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=Country_Region,Deaths,Incident_Rate,Mortality_Rate,Confirmed&outSR=4326&f=json"
rawData <- jsonlite::fromJSON(url)
names(rawData$features)
report = data$features
report$attributes
names(rawData$features)
report = data$features$attributes
library(jsonlite)
url <- "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases2_v1/FeatureServer/2/query?where=1%3D1&outFields=Country_Region,Deaths,Incident_Rate,Mortality_Rate,Confirmed&outSR=4326&f=json"
rawData <- jsonlite::fromJSON(url)
names(rawData$features)
report = data$features$attributes
report
library(jsonlite)
library(jsonlite)
url <- "https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/bing_covid-19_data/latest/bing_covid-19_data.json"
rawData <- jsonlite::fromJSON(url)
library(jsonlite)
url <- "https://pandemicdatalake.blob.core.windows.net/public/curated/covid-19/bing_covid-19_data/latest/bing_covid-19_data.json"
rawData <- jsonlite::fromJSON(url)
rawData
countries <- rawData$country_region
countries
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
setwd("~/Documents/formula1/R")
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
source("~/Documents/formula1/R/scraper_wet_races.r", echo=TRUE)
